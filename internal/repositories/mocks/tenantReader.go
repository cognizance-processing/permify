package mocks

import (
	"context"

	"github.com/stretchr/testify/mock"

	"permify/pkg/database"
	base "permify/pkg/pb/base/v1"
)

// TenantReader is an autogenerated mock type for the TenantReader type
type TenantReader struct {
	mock.Mock
}

// ListTenants - Reads a Schema Definition from repository
func (_m *TenantReader) ListTenants(ctx context.Context, pagination database.Pagination) (tenants []*base.Tenant, ct database.EncodedContinuousToken, err error) {
	ret := _m.Called(pagination)

	var r0 []*base.Tenant
	if rf, ok := ret.Get(0).(func(context.Context, database.Pagination) []*base.Tenant); ok {
		r0 = rf(ctx, pagination)
	} else {
		r0 = ret.Get(0).([]*base.Tenant)
	}

	var r1 database.EncodedContinuousToken
	if rf, ok := ret.Get(1).(func(context.Context, database.Pagination) database.EncodedContinuousToken); ok {
		r1 = rf(ctx, pagination)
	} else {
		r1 = ret.Get(1).(database.EncodedContinuousToken)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, database.Pagination) error); ok {
		r2 = rf(ctx, pagination)
	} else {
		if e, ok := ret.Get(2).(error); ok {
			r2 = e
		} else {
			r2 = nil
		}
	}

	return r0, r1, r2
}
